---
import type { IBlogs } from "@/lib/interface";
import { Image } from "astro:assets";
import type { Entry } from "contentful";
import { Badge } from "./ui/badge";
import { format } from "date-fns";
import TitleComponent from "@/components/ui/title.astro";
import { slugify } from "@/lib/slugify";

const { blogData } = Astro.props;

// Separate featured and unfeatured blogs
const featuredBlogs = blogData.items.filter(
  (blog: Entry<IBlogs, "WITHOUT_UNRESOLVABLE_LINKS", string>) =>
    blog.fields.featured
);
const unfeaturedBlogs = blogData.items.filter(
  (blog: Entry<IBlogs, "WITHOUT_UNRESOLVABLE_LINKS", string>) =>
    !blog.fields.featured
);
---

<section class="main-section">
  <!-- Featured Posts Section -->
  <div>
    <div>
      <TitleComponent
        title=`Featured ${featuredBlogs.length === 1 ? 'Blog' : 'Blogs'}`
      />
    </div>
    {
      featuredBlogs.length > 0 ? (
        featuredBlogs.map((blog: any) => (
          <a href={`/blog/${slugify(blog.fields.slug)}`} class="md:grid-cols-2 grid-cols-1 grid justify-center items-center gap-5">
            <div>
              <Image
                src={blog.fields.image?.fields.file?.url}
                alt={blog.fields.image?.fields.title}
                title={blog.fields.image?.fields.title}
                loading={"lazy"}
                height={400}
                width={500}
                class="rounded-lg" 
              />
            </div>
            <div class="space-y-3">
              <div>
                <div>
                  {blog.fields.tags.map((tag: string) => {
                    return <Badge variant={"secondary"}>{tag}</Badge>;
                  })}
                  {blog.sys.createdAt && (
                    <span>
                      <span class="mr-2">|</span>
                      {format(blog.sys.createdAt, "dd MMM yy")}
                    </span>
                  )}
                </div>
              </div>
              <h2 class="capitalize font-bold text-2xl">{blog.fields.title}</h2>
              <p>{blog.fields.description}</p>
            </div>
          </a>
        ))
      ) : (
        <p>No blogs found</p>
      )
    }
  </div>

  <!-- Unfeatured Posts Section -->
  <div>
    <TitleComponent
      title=`Our ${unfeaturedBlogs.length === 1 ? 'Blog' : 'Blogs'}`
    />
  </div>
  <div class="grid grid-cols-1 md:grid-cols-3 gap-5">
    {
      unfeaturedBlogs.length > 0 ? (
        unfeaturedBlogs.map((blog: any) => (
          <a href={`/blog/${slugify(blog.fields.slug)}`} class="flex flex-col justify-start items-start gap-5">
            <div>
              <Image
                src={blog.fields.image?.fields.file?.url}
                alt={blog.fields.image?.fields.title}
                title={blog.fields.image?.fields.title}
                loading={"lazy"}
                height={400}
                width={500}
                class="rounded-lg md:h-[250px] object-cover"
              />
            </div>
            <div class="space-y-3">
              <div>
                <div>
                  {blog.fields.tags.map((tag: string) => {
                    return <Badge variant={"secondary"}>{tag}</Badge>;
                  })}
                  {blog.sys.createdAt && (
                    <span>
                      <span class="mr-2">|</span>
                      {format(blog.sys.createdAt, "dd MMM yy")}
                    </span>
                  )}
                </div>
              </div>
              <h2 class="capitalize font-bold text-2xl">{blog.fields.title}</h2>
              <p>{blog.fields.description}</p>
            </div>
          </a>
        ))
      ) : (
        <p>No blogs found</p>
      )
    }
  </div>
</section>
