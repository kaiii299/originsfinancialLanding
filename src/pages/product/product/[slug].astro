---
import Layout from "@/layouts/Layout.astro";
import { client } from "@/lib/contentful"; // Import your Contentful client
import type { IBlogs, iBreadCrumbItems } from "@/lib/interface";
import RichTextComponent from "@/components/RichTextComponent";
import type { EntryCollection } from "contentful";
import { Image } from "astro:assets";
import { format } from "date-fns";
import BreadCrumbComponent from "@/components/breadCrumbComponent";

export async function getStaticPaths() {
  const blogData: EntryCollection<
    IBlogs,
    "WITHOUT_UNRESOLVABLE_LINKS",
    string
  > = await client.withoutUnresolvableLinks.getEntries<IBlogs>({
    content_type: "blogs",
  });

  return blogData.items.map((item) => ({
    // Generate path based on slug
    params: { slug: item.fields.slug },
  }));
}

let post;

const { slug } = Astro.params;

try {
  const data: EntryCollection<IBlogs, "WITHOUT_UNRESOLVABLE_LINKS", string> =
    await client.withoutUnresolvableLinks.getEntries<IBlogs>({
      content_type: "blogs",
      "fields.slug": slug,
    });

  if (!data.items.length) {
    throw new Error(`Post with slug "${slug}" not found.`);
  }

  const { title, content, description, image, tags } = data.items[0].fields;
  

  post = {
    title: title,
    content: content,
    description: description,
    image: image,
    tags: tags,
    createdAt: data.items[0].sys.createdAt,
  };
} catch (error) {
  return Astro.redirect("/404");
}

const breadCrumbItem: iBreadCrumbItems[] = [
    { name: "Home", href: "/", current: false },
    { name: "Blogs", href: "/blogs", current: false },
    { name: post?.title, href: "", current: true },
  ];
  
---